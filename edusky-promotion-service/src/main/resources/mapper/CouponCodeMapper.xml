<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.sky.promotion.po.dao.CouponCodeMapper">
  <resultMap id="BaseResultMap" type="com.edu.sky.promotion.po.entity.CouponCode">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="coupon_id" jdbcType="BIGINT" property="couponId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="used_flag" jdbcType="TINYINT" property="usedFlag" />
    <result column="export_flag" jdbcType="BIT" property="exportFlag" />
    <result column="bind_type" jdbcType="TINYINT" property="bindType" />
    <result column="bind_time" jdbcType="TIMESTAMP" property="bindTime" />
    <result column="used_time" jdbcType="TIMESTAMP" property="usedTime" />
    <result column="expiration_time" jdbcType="TIMESTAMP" property="expirationTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, coupon_id, code, used_flag, export_flag, bind_type, bind_time, used_time, expiration_time, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.edu.sky.promotion.po.example.CouponCodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_coupon_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectAndConditionByPage" parameterType="java.util.Map" resultMap="JoinCouponUserAndRestrictResultMap">
      SELECT tcc.id, tcc.coupon_id, tcc.code, tcc.used_flag, tcc.export_flag, tcc.bind_type, tcc.bind_time
              ,tcc.used_time, tcc.expiration_time,tcc.create_time, tcc.update_time
              ,tc.`name` AS couponName,tc.face_value AS faceValue,tcu.user_open_id AS userOpenId
              ,trc.id AS restrict_condition_id ,trc.type,trc.restrict_value,trc.description
      FROM t_coupon_code tcc
      LEFT JOIN t_coupon tc ON tc.id = tcc.coupon_id
      LEFT JOIN t_coupon_user tcu ON tcu.coupon_code_id = tcc.id
      LEFT JOIN t_restrict_condition trc ON trc.coupon_id = tcc.coupon_id
      WHERE 1 = 1
      <if test="record.couponId != null">
        AND tcc.coupon_id = #{record.couponId,jdbcType=BIGINT}
      </if>
      <if test="record.code != null">
        AND tcc.code = #{record.code,jdbcType=VARCHAR}
      </if>
      <if test="record.usedFlag != null or record.usedFlag == 0">
        AND tccused_flag = .#{record.usedFlag,jdbcType=TINYINT}
      </if>
      <if test="record.exportFlag != null or record.exportFlag == 0">
        AND tcc.exportflag = #{record.exportFlag,jdbcType=BIT}
      </if>
      <if test="record.bindType != null or record.bindType == 0">
        AND tcc.bind_type = #{record.bindType,jdbcType=TINYINT}
      </if>
      ORDER BY tcc.expiration_time DESC
      LIMIT #{limit} OFFSET #{offset}
  </select>
    <select id="selectAndConditionByPageCount" parameterType="java.util.Map" resultType="java.lang.Long">
        SELECT COUNT(tcc.id)
        FROM t_coupon_code tcc
        LEFT JOIN t_coupon tc ON tc.id = tcc.coupon_id
        LEFT JOIN t_coupon_user tcu ON tcu.coupon_code_id = tcc.id
        LEFT JOIN t_restrict_condition trc ON trc.coupon_id = tcc.coupon_id
        WHERE 1 = 1
        <if test="record.couponId != null">
            AND tcc.coupon_id = #{record.couponId,jdbcType=BIGINT}
        </if>
        <if test="record.code != null">
            AND tcc.code = #{record.code,jdbcType=VARCHAR}
        </if>
        <if test="record.usedFlag != null or record.usedFlag == 0">
            AND tccused_flag = .#{record.usedFlag,jdbcType=TINYINT}
        </if>
        <if test="record.exportFlag != null or record.exportFlag == 0">
            AND tcc.exportflag = #{record.exportFlag,jdbcType=BIT}
        </if>
        <if test="record.bindType != null or record.bindType == 0">
            AND tcc.bind_type = #{record.bindType,jdbcType=TINYINT}
        </if>
    </select>
  <resultMap id="JoinCouponUserAndRestrictResultMap" type="com.edu.sky.promotion.po.entity.CouponCode" extends="BaseResultMap">
    <result column="couponName" property="couponName"/>
    <result column="couponApplicationType" property="couponApplicationType"/>
      <result column="userOpenId" property="openId"/>
      <result column="faceValue" property="faceValue"/>
    <collection property="restrictConditions" ofType="com.edu.sky.promotion.po.entity.RestrictCondition">
      <result column="restrict_condition_id" property="id"/>
      <result column="type" property="type"/>
      <result column="restrict_value" property="restrictValue"/>
      <result column="description" property="description"/>
    </collection>
  </resultMap>
  <select id="selectByJoinPage" parameterType="java.util.Map" resultMap="JoinCouponUserAndRestrictResultMap">
      SELECT tcc.id,tcc.used_flag,tcc.expiration_time,tcc.code
              ,tc.`name` AS couponName,tc.application_type AS couponApplicationType
              ,trc.id AS restrict_condition_id,trc.type,trc.restrict_value,trc.description
      FROM t_coupon_code tcc
      RIGHT JOIN t_coupon_user tcu ON tcu.coupon_code_id = tcc.id
      INNER JOIN t_coupon tc ON tc.id = tcc.coupon_id
      LEFT JOIN t_restrict_condition trc ON trc.coupon_id = tcc.coupon_id
      WHERE 1=1 AND tcc.expiration_time >= NOW()
      <if test="openId != null">
          AND tcu.user_open_id = #{openId}
      </if>
      <choose>
        <when test="usedFlag == 0">
          AND tcc.used_flag = 0
        </when>
        <otherwise>
          AND tcc.used_flag != 0
        </otherwise>
      </choose>
      ORDER BY tcc.used_flag ASC,tcc.expiration_time DESC
      LIMIT #{limit} OFFSET #{offset}
  </select>
    <select id="selectByJoinCount" parameterType="java.util.Map" resultType="java.lang.Long">
        SELECT COUNT(tcc.id)
        FROM t_coupon_code tcc
        RIGHT JOIN t_coupon_user tcu ON tcu.coupon_code_id = tcc.id
        INNER JOIN t_coupon tc ON tc.id = tcc.coupon_id
        WHERE 1=1
        <if test="openId != null">
            AND tcu.user_open_id = #{openId}
        </if>
        <if test="usedFlag != null or usedFlag == 0">
            AND tcc.used_flag = #{usedFlag}
        </if>
        <if test="couponId != null">
            AND tc.id = #{couponId}
        </if>
    </select>

  <delete id="deleteByExample" parameterType="com.edu.sky.promotion.po.example.CouponCodeExample">
    delete from t_coupon_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edu.sky.promotion.po.entity.CouponCode">
    insert into t_coupon_code (id, coupon_id, code, 
      used_flag, export_flag, bind_type, 
      bind_time, used_time, expiration_time, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{couponId,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, 
      #{usedFlag,jdbcType=TINYINT}, #{exportFlag,jdbcType=BIT}, #{bindType,jdbcType=TINYINT}, 
      #{bindTime,jdbcType=TIMESTAMP}, #{usedTime,jdbcType=TIMESTAMP}, #{expirationTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertList" parameterType="java.util.List" >
    insert into t_coupon_code (id, coupon_id, code,
      used_flag, export_flag, bind_type,
      bind_time, used_time, expiration_time,
      create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.couponId,jdbcType=BIGINT}, #{item.code,jdbcType=VARCHAR},
      #{item.usedFlag,jdbcType=TINYINT}, #{item.exportFlag,jdbcType=BIT}, #{item.bindType,jdbcType=TINYINT},
      #{item.bindTime,jdbcType=TIMESTAMP}, #{item.usedTime,jdbcType=TIMESTAMP}, #{item.expirationTime,jdbcType=TIMESTAMP},
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.edu.sky.promotion.po.entity.CouponCode" useGeneratedKeys="true" keyProperty="id">
    insert into t_coupon_code
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="usedFlag != null">
        used_flag,
      </if>
      <if test="exportFlag != null">
        export_flag,
      </if>
      <if test="bindType != null">
        bind_type,
      </if>
      <if test="bindTime != null">
        bind_time,
      </if>
      <if test="usedTime != null">
        used_time,
      </if>
      <if test="expirationTime != null">
        expiration_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="usedFlag != null">
        #{usedFlag,jdbcType=TINYINT},
      </if>
      <if test="exportFlag != null">
        #{exportFlag,jdbcType=BIT},
      </if>
      <if test="bindType != null">
        #{bindType,jdbcType=TINYINT},
      </if>
      <if test="bindTime != null">
        #{bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usedTime != null">
        #{usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expirationTime != null">
        #{expirationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edu.sky.promotion.po.example.CouponCodeExample" resultType="java.lang.Long">
    select count(*) from t_coupon_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_coupon_code
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.couponId != null">
        coupon_id = #{record.couponId,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.usedFlag != null">
        used_flag = #{record.usedFlag,jdbcType=TINYINT},
      </if>
      <if test="record.exportFlag != null">
        export_flag = #{record.exportFlag,jdbcType=BIT},
      </if>
      <if test="record.bindType != null">
        bind_type = #{record.bindType,jdbcType=TINYINT},
      </if>
      <if test="record.bindTime != null">
        bind_time = #{record.bindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.usedTime != null">
        used_time = #{record.usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expirationTime != null">
        expiration_time = #{record.expirationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_coupon_code
    set id = #{record.id,jdbcType=BIGINT},
      coupon_id = #{record.couponId,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      used_flag = #{record.usedFlag,jdbcType=TINYINT},
      export_flag = #{record.exportFlag,jdbcType=BIT},
      bind_type = #{record.bindType,jdbcType=TINYINT},
      bind_time = #{record.bindTime,jdbcType=TIMESTAMP},
      used_time = #{record.usedTime,jdbcType=TIMESTAMP},
      expiration_time = #{record.expirationTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectConditionByOpenId" parameterType="java.util.Map" resultMap="JoinCouponUserAndRestrictResultMap">
      SELECT tcc.id,tcc.used_flag,tcc.expiration_time,tcc.code
              ,tc.`name` AS couponName,tc.application_type AS couponApplicationType
              ,trc.id AS restrict_condition_id,trc.type,trc.restrict_value,trc.description
      FROM `t_coupon_code` tcc
      LEFT JOIN t_coupon_user tcu ON tcu.coupon_code_id = tcc.id
      LEFT JOIN t_coupon tc ON tc.id = tcc.coupon_id
      LEFT JOIN t_restrict_condition trc ON trc.coupon_id = tcc.coupon_id
      WHERE tcc.used_flag = 0
      AND tc.common_state = 0
      AND tc.del_flag = 0
      AND tcu.user_open_id = #{openId}
  </select>
    <update id="updateListExpirationTime" parameterType="java.util.Map" >
        UPDATE t_coupon_code
        SET expiration_time = CASE
        WHEN ISNULL(expiration_time) THEN NULL
        ELSE DATE_ADD(expiration_time,INTERVAL #{expireDay} DAY)
        END
        WHERE coupon_id = #{couponId}
    </update>
</mapper>